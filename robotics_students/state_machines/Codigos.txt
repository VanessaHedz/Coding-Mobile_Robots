case 0:
                        if(intensity == 1)
                        {
                                //The robot has reached the destination
                                gen_vector=generate_output(STOP,Mag_Advance,max_angle);
                                printf("Present State: %d STOP\n", state);
                                *next_state=0;
                        }
                        else
                        {
                                //The robot hasn't reached the destination
                                gen_vector=generate_output(FORWARD,Mag_Advance,max_angle);
                                printf("Present State: %d FORWARD\n", state);
                                *next_state=1;
                        }
                        break;

                case 1:
                        //First, check if there is an obstacle:
                        if(obs== 0)
                        {
                                //There is no obstacle. Go FORWARD.
                                gen_vector=generate_output(FORWARD,Mag_Advance,max_angle);
                                printf("Present State: %d FORWARD\n", state);
                                *next_state=0; 
                                //**************************Que busque la luz???*********************************************************** ???
                        }
                        else
                        {
                                //First, STOP:
                                gen_vector=generate_output(STOP,Mag_Advance,max_angle);
                                printf("Present State: %d STOP\n", state);
                                
                                //Kinds of obstacles:
                                if(obs==1) //Obstacle in the right
                                {
                                        *next_state = 2;
                                }
                                else if(obs==2) //Obstacle in the left
                                {
                                        *next_state = 3;
                                }
                                else if(obs==3) //Obstacle in the front
                                {
                                        *next_state = 4;
                                }

                        }
                        break;

                case 2: //Obstacle in the right
                        gen_vector=generate_output(FORWARD,Mag_Advance,max_angle);
                        printf("Present State: %d FORWARD\n", state);
                        *next_state=0;
                        break;

                case 3: //Obstacle in the left
                        gen_vector=generate_output(FORWARD,Mag_Advance,max_angle);
                        printf("Present State: %d FORWARD\n", state);
                        *next_state=0; 
                        break;
                
                case 4: //Obstacle in front
                        gen_vector=generate_output(STOP,Mag_Advance,max_angle);
                        printf("Present State: %d STOP\n", state);

                        //Coordenates when the robot hits the obstacle
                        static float x_obs=0.0;
                        static float y_obs=0.0;

                        *next_state=5; 
                        break;
                
                case 5:
                        //if (obs==3){} //Obstacle in front
                        gen_vector=generate_output(LEFT,Mag_Advance,max_angle);
                        printf("Present State: %d LEFT\n", state);
                        *next_state=6;
                        break;
                
                case 6:
                        //Second turn to the left
                        gen_vector=generate_output(LEFT,Mag_Advance,max_angle);
                        printf("Present State: %d LEFT\n", state);
                        *next_state=7;
                        break;
                
                case 7:
                        //Go Forward
                        gen_vector=generate_output(FORWARD,Mag_Advance,max_angle);
                        printf("Present State: %d FORWARD\n", state);
                        *next_state=8;
                        break;
                
                case 8:
                        //First turn to the right (to keep following the obstacle)
                        gen_vector=generate_output(RIGHT,Mag_Advance,max_angle);
                        printf("Present State: %d RIGHT\n", state);
                        *next_state=9;
                        break;
                
                case 9:
                        //Second turn to the right
                        gen_vector=generate_output(RIGHT,Mag_Advance,max_angle);
                        printf("Present State: %d RIGHT\n", state);
                        *next_state=10;
                        break;
                
                case 10:
                        //The robot has returned to (x_obs,y_obs)?
                        gen_vector=generate_output(STOP,Mag_Advance,max_angle);
                        printf("Present State: %d STOP\n", state);
                        //Read the actual position of the robot
                        float x_robot=0;
                        float y_robot=0;

                        if(x_robot==x_obs && y_robot==y_obs)
                        {
                                *next_state=5; //******************************************************** CHECK NEXT_STATE!!!!
                        }
                        else
                        {
                                *next_state=11; 
                        }
                        
                        break;
                
                case 11:
                        if(obs == 3)
                        {
                                *next_state=5; //Return to the state where the robot has an obstacle in front
                        }
                        else if(obs == 1)
                        {
                                //Keeps following the obstacle, but the obstacle is to the right
                                gen_vector=generate_output(FORWARD,Mag_Advance,max_angle);
                                printf("Present State: %d FORWARD\n", state);
                                *next_state=10;
                        }
                        else
                        {
                                //The robot has passed the obstacle, so we returned it (?)
                                gen_vector=generate_output(STOP,Mag_Advance,max_angle);
                                printf("Present State: %d STOP\n", state);
                                *next_state=12;
                        }
                        break;

                case 12:
                        gen_vector=generate_output(RIGHT,Mag_Advance,max_angle);
                        printf("Present State: %d RIGHT\n", state);
                        *next_state=13;
                        break;

                case 13:
                        gen_vector=generate_output(RIGHT,Mag_Advance,max_angle);
                        printf("Present State: %d RIGHT\n", state);
                        *next_state=14;
                        break;
                
                case 14:
                        gen_vector=generate_output(FORWARD,Mag_Advance,max_angle);
                        printf("Present State: %d FORWARD\n", state);
                        *next_state=11;
                        break;
/*
                case 3: //Obstacle in the left
                        //If the robot is following a Wall, we want to always have this kind of obstacle.

                        //*******************************TEMPORALMENTE AVANZA SOLAMENTE********************************************

                        gen_vector=generate_output(FORWARD,Mag_Advance,max_angle);
                        printf("Present State: %d FORWARD\n", state);
                        *next_state = 0;
                        break;
                case 4:
                        gen_vector=generate_output(LEFT,Mag_Advance,max_angle);
                        printf("Present State: %d TURN LEFT (1)\n", state);
                        *next_state = 5;
                        break;
                case 5:
                        gen_vector=generate_output(LEFT,Mag_Advance,max_angle);
                        printf("Present State: %d TURN LEFT (2)\n", state);
                        *next_state = 6;
                        break;
                case 6:
                        //It has turned 2 times to the left, but we want it to follow the obstacle, so...
                        *next_state=3; //Go to the state machine of the "Obstacle in the left"
                        break;

                        */